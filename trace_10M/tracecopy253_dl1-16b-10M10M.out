sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of November, 2000.
Copyright (c) 1994-2000 by Todd M. Austin.  All Rights Reserved.
This version of SimpleScalar is licensed for academic non-commercial use only.


Cache Parameters:
  Size in bytes: 65536
  Number of sets: 512
  Associativity: 2
  Block Size (bytes): 64

Access Time: 1.09095e-08
Cycle Time:  1.30986e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.42187
 tag side (ns): 9.37809
 decode_data (ns): 4.27991
 wordline_data (ns): 1.59521
 bitline_data (ns): 0.435301
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.63649
 wordline_tag (ns): 0.837847
 bitline_tag (ns): 0.456473
 sense_amp_tag (ns): 0.26
 compare (ns): 2.12052
 mux driver (ns): 2.73888
 sel inverter (ns): 0.327875
 data output driver (ns): 1.53146
 total data path (with output driver) (ns): 6.89042
 total tag path is set assoc (ns): 9.37809
 precharge time (ns): 2.18904

Cache Parameters:
  Size in bytes: 65536
  Number of sets: 512
  Associativity: 2
  Block Size (bytes): 64

Access Time: 1.09095e-08
Cycle Time:  1.30986e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.42187
 tag side (ns): 9.37809
 decode_data (ns): 4.27991
 wordline_data (ns): 1.59521
 bitline_data (ns): 0.435301
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.63649
 wordline_tag (ns): 0.837847
 bitline_tag (ns): 0.456473
 sense_amp_tag (ns): 0.26
 compare (ns): 2.12052
 mux driver (ns): 2.73888
 sel inverter (ns): 0.327875
 data output driver (ns): 1.53146
 total data path (with output driver) (ns): 6.89042
 total tag path is set assoc (ns): 9.37809
 precharge time (ns): 2.18904

Cache Parameters:
  Size in bytes: 2097152
  Number of sets: 16384
  Associativity: 2
  Block Size (bytes): 64

Access Time: 2.92981e-08
Cycle Time:  3.4664e-08

Best Ndwl (L1): 1
Best Ndbl (L1): 8
Best Nspd (L1): 2
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 4

Time Components:
 data side (with Output driver) (ns): 23.8
 tag side (ns): 27.4147
 decode_data (ns): 14.8551
 wordline_data (ns): 4.77211
 bitline_data (ns): 1.70934
 sense_amp_data (ns): 0.58
 decode_tag (ns): 13.0927
 wordline_tag (ns): 1.90825
 bitline_tag (ns): 1.60792
 sense_amp_tag (ns): 0.26
 compare (ns): 2.39763
 mux driver (ns): 7.79325
 sel inverter (ns): 0.354865
 data output driver (ns): 1.88343
 total data path (with output driver) (ns): 21.9166
 total tag path is set assoc (ns): 27.4147
 precharge time (ns): 5.36594

Cache Parameters:
  Size in bytes: 2097152
  Number of sets: 16384
  Associativity: 2
  Block Size (bytes): 64

Access Time: 2.92981e-08
Cycle Time:  3.4664e-08

Best Ndwl (L1): 1
Best Ndbl (L1): 8
Best Nspd (L1): 2
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 4

Time Components:
 data side (with Output driver) (ns): 23.8
 tag side (ns): 27.4147
 decode_data (ns): 14.8551
 wordline_data (ns): 4.77211
 bitline_data (ns): 1.70934
 sense_amp_data (ns): 0.58
 decode_tag (ns): 13.0927
 wordline_tag (ns): 1.90825
 bitline_tag (ns): 1.60792
 sense_amp_tag (ns): 0.26
 compare (ns): 2.39763
 mux driver (ns): 7.79325
 sel inverter (ns): 0.354865
 data output driver (ns): 1.88343
 total data path (with output driver) (ns): 21.9166
 total tag path is set assoc (ns): 27.4147
 precharge time (ns): 5.36594
Ireg File Leakage Power
Ireg File  Leakage Power Consumption: 0.00253438 
 datarray_power write Bitline (W): 4.59633e-07
 datarray_power read Bitline (W): 5.65934e-07
 datarray_power Cell (W): 2.11924e-07
Instruction Cache Power Leakage Power Consumption: 0.260316 
Instruction Cache Leakage Power
 decode_power_data (W): 0.00080051
 decode_power_tag (W): 0.000197865
 senseamp_power_data (W): 0.000747145
 senseamp_power_tag (W): 7.44227e-05
 comparator_power_leak (W): 2.58746e-05
 mux_driver_power_leak (W): 0.000137922
 output_driver_power_leak (W): 0.00272311
 tagarray_power (W): 0.0231547
 datarray_power (W): 0.232455
 datarray_power Bitline (W): 2.31716e-07
 datarray_power Cell (W): 2.11656e-07
Data Cache Power Consumption: 0.259486  
Data Cache Leakage Power
 decode_power_data (W): 0.000795813
 decode_power_tag (W): 0.000198953
 senseamp_power_data (W): 0.000747552
 senseamp_power_tag (W): 7.44632e-05
 comparator_power_leak (W): 2.60567e-05
 mux_driver_power_leak (W): 0.000137499
 output_driver_power_leak (W): 0.00272502
 tagarray_power (W): 0.0230796
 datarray_power (W): 0.231701
Data Cache 2 Power Consumption: 8.483  
Data Cache Level 2 Leakage Power
 decode_power_data (W): 0.00380324
 senseamp_power_data (W): 0.000753593
 senseamp_power_tag (W): 6.77057e-05
 decode_power_tag (W): 0.00190162
 comparator_power_leak (W): 2.40719e-05
 mux_driver_power_leak (W): 0.000137693
 output_driver_power_leak (W): 0.00272948
 tagarray_power (W): 1.02061
 datarray_power (W): 7.45298
 icache cell gatevss leakage: 0.000205716
 icache tag gatevss leakage: 2.06828e-05
 dcache cell gatevss leakage: 0.000208259
 dcache tag gatevss leakage: 2.06596e-05
 dcache2 cell gatevss leakage: 0.00671316
 dcache2 tag gatevss leakage: 0.000598665
 icache cell drowsy leakage: 0.0151198
 icache tag drowsy leakage: 0.00150562
 dcache cell drowsy leakage: 0.0150926
 dcache tag drowsy leakage: 0.00150897
 dcache2 cell drowsy leakage: 0.308631
 dcache2 tag drowsy leakage: 0.0276015
 icache cell rbb leakage: 0.068362
 icache tag rbb leakage: 0.00684606
 dcache cell rbb leakage: 0.068692
 dcache tag rbb leakage: 0.00679713
 dcache2 cell rbb leakage: 0.439127
 dcache2 tag rbb leakage: 0.0396991
 dcache1 dualvt cell leakage: 1.94322e-08
 dcache1 dualvt bitline leakage: 2.33071e-07
 dcache gatedvss cell gate leakage: 0
 dcache gatedvss tag gate leakage: 0
 dcache drowsy cell gate leakage: 0
 dcache drowsy tag gate leakage: 0
 dcache rbb cell gate leakage: 0
 dcache rbb tag gate leakage: 0

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 1024
  Associativity: 2
  Block Size (bytes): 8

Access Time: 9.34953e-09
Cycle Time:  1.09784e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 8.32249
 tag side (ns): 8.75101
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.815704
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37396
 wordline_tag (ns): 1.34576
 bitline_tag (ns): 0.451166
 sense_amp_tag (ns): 0.26
 compare (ns): 2.36506
 mux driver (ns): 1.60325
 sel inverter (ns): 0.3518
 data output driver (ns): 0.598526
 total data path (with output driver) (ns): 7.72396
 total tag path is set assoc (ns): 8.75101
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 65536
  Number of sets: 512
  Associativity: 2
  Block Size (bytes): 64

Access Time: 1.09095e-08
Cycle Time:  1.30986e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.42187
 tag side (ns): 9.37809
 decode_data (ns): 4.27991
 wordline_data (ns): 1.59521
 bitline_data (ns): 0.435301
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.63649
 wordline_tag (ns): 0.837847
 bitline_tag (ns): 0.456473
 sense_amp_tag (ns): 0.26
 compare (ns): 2.12052
 mux driver (ns): 2.73888
 sel inverter (ns): 0.327875
 data output driver (ns): 1.53146
 total data path (with output driver) (ns): 6.89042
 total tag path is set assoc (ns): 9.37809
 precharge time (ns): 2.18904

Cache Parameters:
  Size in bytes: 65536
  Number of sets: 512
  Associativity: 2
  Block Size (bytes): 64

Access Time: 1.09095e-08
Cycle Time:  1.30986e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.42187
 tag side (ns): 9.37809
 decode_data (ns): 4.27991
 wordline_data (ns): 1.59521
 bitline_data (ns): 0.435301
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.63649
 wordline_tag (ns): 0.837847
 bitline_tag (ns): 0.456473
 sense_amp_tag (ns): 0.26
 compare (ns): 2.12052
 mux driver (ns): 2.73888
 sel inverter (ns): 0.327875
 data output driver (ns): 1.53146
 total data path (with output driver) (ns): 6.89042
 total tag path is set assoc (ns): 9.37809
 precharge time (ns): 2.18904

Cache Parameters:
  Size in bytes: 2097152
  Number of sets: 16384
  Associativity: 2
  Block Size (bytes): 64

Access Time: 2.92981e-08
Cycle Time:  3.4664e-08

Best Ndwl (L1): 1
Best Ndbl (L1): 8
Best Nspd (L1): 2
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 4

Time Components:
 data side (with Output driver) (ns): 23.8
 tag side (ns): 27.4147
 decode_data (ns): 14.8551
 wordline_data (ns): 4.77211
 bitline_data (ns): 1.70934
 sense_amp_data (ns): 0.58
 decode_tag (ns): 13.0927
 wordline_tag (ns): 1.90825
 bitline_tag (ns): 1.60792
 sense_amp_tag (ns): 0.26
 compare (ns): 2.39763
 mux driver (ns): 7.79325
 sel inverter (ns): 0.354865
 data output driver (ns): 1.88343
 total data path (with output driver) (ns): 21.9166
 total tag path is set assoc (ns): 27.4147
 precharge time (ns): 5.36594

Processor Parameters:
Issue Width: 4
Window Size: 80
Number of Virtual Registers: 32
Number of Physical Registers: 80
Datapath Width: 64
Total Power Consumption: 58.7081
Branch Predictor Power Consumption: 2.46627  (4.35%)
 branch target buffer power (W): 2.05926
 local predict power (W): 0.108503
 global predict power (W): 0.0859093
 chooser power (W): 0.0859093
 RAS power (W): 0.126691
Rename Logic Power Consumption: 0.223759  (0.395%)
 Instruction Decode Power (W): 0.00767628
 RAT decode_power (W): 0.0556954
 RAT wordline_power (W): 0.014394
 RAT bitline_power (W): 0.141272
 DCL Comparators (W): 0.0047209
Instruction Window Power Consumption: 2.46227  (4.34%)
 tagdrive (W): 0.218606
 tagmatch (W): 0.0996782
 Selection Logic (W): 0.0380424
 decode_power (W): 0.17238
 wordline_power (W): 0.0254732
 bitline_power (W): 1.90809
Load/Store Queue Power Consumption: 1.0653  (1.88%)
 tagdrive (W): 0.444308
 tagmatch (W): 0.188728
 decode_power (W): 0.0249221
 wordline_power (W): 0.00480661
 bitline_power (W): 0.402538
Arch. Register File Power Consumption: 1.30425  (2.3%)
 decode_power (W): 0.0556954
 wordline_power (W): 0.0254732
 bitline_power (W): 1.22308
Result Bus Power Consumption: 1.15725  (2.04%)
Total Clock Power: 22.5347  (39.7%)
Int ALU Power: 3.09557  (5.46%)
FP ALU Power: 4.74322  (8.36%)
Instruction Cache Power Consumption: 3.12484  (5.51%)
 decode_power (W): 0.767931
 wordline_power (W): 0.0296904
 bitline_power (W): 1.81591
 senseamp_power (W): 0.1536
 tagarray_power (W): 0.357705
Itlb_power (W): 0.0287368 (0.0507%)
Data Cache Power Consumption: 6.24967  (11%)
 decode_power (W): 1.53586
 wordline_power (W): 0.0593807
 bitline_power (W): 3.63182
 senseamp_power (W): 0.3072
 tagarray_power (W): 0.715411
Dtlb_power (W): 0.0574735 (0.101%)
Level 2 Cache Power Consumption: 8.19477 (14.5%)
 decode_power (W): 0.460619
 wordline_power (W): 0.0235256
 bitline_power (W): 6.17369
 senseamp_power (W): 0.1536
 tagarray_power (W): 1.38334
sim: loading EIO file: spec2000.253.perlbmk.ref.makerand.eio
sim: command line: ./sim-outorder -config hotleak_alpha_config.cfg spec2000.253.perlbmk.ref.makerand.eio 

sim: simulation started @ Sun Feb 17 15:27:58 2019, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst            10000000 # maximum number of inst's to execute
-fastfwd             10000000 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              8 # instruction fetch queue size (in insts)
-fetch:mplat                2 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                   comb # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     4096 # bimodal predictor config (<table size>)
-bpred:2lev      1 4096 12 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      4096 # combining predictor config (<meta_table_size>)
-bpred:ras                 32 # return address stack size (0 for no return stack)
-bpred:btb       1024 2 # BTB config (<num_sets> <associativity>)
-bpred:spec_update           ID # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  80 # register update unit (RUU) size
-lsq:size                  40 # load/store queue (LSQ) size
-cache:dl1       dl1:512:64:2:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               2 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:16384:64:2:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat              11 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:64:2:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat              11 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         97 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                 16 # memory access bus width (in bytes)
-tlb:itlb        itlb:1:4096:128:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:1:4096:128:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  2 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)
# -DUMMY5              <null> # ---------------Aris: Start of decay options - Not a real option
-step:increase         2.0000 # increase step.        
-step:decrease         2.0000 # decrease step.        
-global:counter         16384 # global counter limit  
-local:counter              3 # local counter limit   
-slow:counter            2047 # slow counter limit    
-fast:counter               3 # fast counter limit    
-skip:start                 0 # ignore start cycles   
-sample:interval          200 # sample interval       
-global:LRU                 0 # off ratio of global LRU scheme
# -DUMMY6              <null> # ---------------Aris: End of decay options - Not a real option
-technology          TECH_070 # technology length i.e., {TECH_180, TECH_130, ,TECH_070, |none}
# -DUMMY3              <null> # ---------------Aris: Start of cache hotLeakage options - Not a real option
-cache_leak_ctrl:type         none # leakage control type {none|gatedVss|drowsy|RBB}
-cache_leak_ctrl:switch_cycles_l2h            0 # time for low to high switch
-cache_leak_ctrl:switch_cycles_h2l          300 # time for high to low switch
-cache_leak_ctrl:switch_power_l2h       0.0003 # low to high switch cost
-cache_leak_ctrl:switch_power_h2l       0.0001 # high to low switch cost
-cache_leak_ctrl:penalty            0 # extra latency in low leak mode
# -DUMMY4              <null> # ---------------Aris: End of cache hotLeakage options - Not a real option
# -DUMMY               <null> # ---------------Aris: Start of hotLeakage options - Not a real option
-ireg:read_ports       8.0000 # ireg file read  ports 
-ireg:write_ports       4.0000 # ireg file write  ports
-ireg:temp           353.0000 # ireg file temperature in Kelvin 
-il1:ports             2.0000 # l1 instruction cache  ports
-il2:ports             2.0000 # l2 instruction cache  ports
-dl1:ports             2.0000 # l1 data cache  ports  
-dl2:ports             2.0000 # l2 data cache  ports  
-il1:temp            353.0000 # l1 instruction cache temperature in Kelvin 
-il2:temp            353.0000 # l2 instruction cache temperature in Kelvin 
-dl1:temp            353.0000 # l1 data cache temperature in Kelvin 
-dl2:temp            353.0000 # l2 data cache temperature in Kelvin 
-tox:var               0.0400 # Tox Std Variation     
-vdd:var               0.0330 # Vdd Std Variation     
-length:var            0.0400 # Tech Length Std Variation
-threshold_n:var       0.0380 # Threshold Nmos Variation
-threshold_p:var       0.0380 # Threshold Pmos Variation
-samples:boxm           10000 # samples for box-mueller method
-tox                   0.0000 # Tox                   
-ireg:voltage          0.9000 # ireg file supply voltage 
-ireg:threshold_Cell_N       0.1902 # ireg file threshold voltage N-Type Cell 
-ireg:threshold_Cell_P       0.2130 # ireg file threshold voltage P-Type Cell 
-ireg:threshold_Access_N       0.1902 # ireg file threshold voltage N-Type Bitline 
-il1:voltage           0.9000 # l1 instruction cache supply voltage 
-il2:voltage           0.9000 # l2 instruction cache supply voltage 
-dl1:voltage           0.9000 # l1 data cache supply voltage 
-dl2:voltage           0.9000 # l2 data cache supply voltage 
-il1:threshold_Cell_N       0.1902 # l1 instruction cache threshold voltage N-Type Cell 
-il1:threshold_Cell_P       0.2130 # l1 instruction cache threshold voltage P-Type Cell 
-il1:threshold_Access_N       0.1902 # l1 instruction cache threshold voltage N-Type Bitline 
-il2:threshold_Cell_N       0.1902 # l2 instruction cache threshold voltage N-Type Cell 
-il2:threshold_Cell_P       0.2130 # l2 instruction cache threshold voltage P-Type Cell 
-il2:threshold_Access_N       0.1902 # l2 instruction cache threshold voltage N-Type Bitline 
-il1:threshold_P       0.2130 # l1 instruction cache threshold voltage P-Type 
-il2:threshold_P       0.2130 # l2 instruction cache threshold voltage P-Type 
-dl1:threshold_Cell_N       0.1902 # l1 data cache threshold voltage N-Type Cell 
-dl1:threshold_Cell_P       0.2130 # l1 data cache threshold voltage P-Type Cell 
-dl1:threshold_Access_N       0.1902 # l1 data cache threshold voltage N-Type Bitline 
-dl2:threshold_P       0.2130 # l2 data cache threshold voltage p-Type 
-dl1:threshold_P       0.2130 # l1 data cache threshold voltage P-Type 
-dl2:threshold_Cell_N       0.1902 # l2 data cache threshold voltage N-Type Cell 
-dl2:threshold_Cell_P       0.2130 # l2 data cache threshold voltage P-Type Cell 
-dl2:threshold_Access_N       0.1902 # l2 data cache threshold voltage N-Type Bitline
-RAM:aspect_ratio_access_ram_cell_N       2.7429 # aspect ratio of  RAM access cell N-Type 
-RAM:aspect_ratio_ram_cell_l2_N       4.5714 # aspect ratio of  RAM cell N-Type 
-RAM:aspect_ratio_ram_cell_l3_P       2.4000 # aspect ratio of  RAM cell P-Type 
-IREG:aspect_ratio_access_ireg_cell_N       2.7429 # aspect ratio of  ireg access cell N-Type 
-RAM:aspect_ratio_ireg_cell_l2_N       4.5714 # aspect ratio of  ireg cell N-Type 
-RAM:aspect_ratio_ireg_cell_l3_P       2.4000 # aspect ratio of  ireg cell P-Type 
-INVERTER:aspect_ratio_decoder_inverter_P      11.4286 # aspect ratio of decoder inverter cell P-Type 
-INVERTER:aspect_ratio_decoder_inverter_N       5.7143 # aspect ratio of decoder inverter cell N-Type 
-INVERTER:aspect_ratio_comparator_inverter1_N       6.8571 # aspect ratio of comparator inverter1 cell N-Type 
-INVERTER:aspect_ratio_comparator_inverter1_P      11.4286 # aspect ratio of comparator inverter1 cell P-Type 
-INVERTER:aspect_ratio_comparator_inverter2_N      13.7143 # aspect ratio of comparator inverter2 cell N-Type 
-INVERTER:aspect_ratio_comparator_inverter2_P      22.8571 # aspect ratio of comparator inverter2 cell P-Type 
-INVERTER:aspect_ratio_comparator_inverter3_N      27.4286 # aspect ratio of comparator inverter3 cell N-Type 
-INVERTER:aspect_ratio_comparator_inverter3_P      45.7143 # aspect ratio of comparator inverter3 cell P-Type 
-INVERTER:aspect_ratio_comparator_inverter4_N      91.4286 # aspect ratio of comparator inverter4 cell N-Type 
-INVERTER:aspect_ratio_comparator_inverter4_P      22.8571 # aspect ratio of comparator inverter4 cell P-Type 
-INVERTER:aspect_ratio_comparator_P      34.2857 # aspect ratio of comparator  cell P-Type 
-COMPARATOR:aspect_ratio_comparator_N      22.8571 # aspect ratio of comparator  cell N-Type 
-MUXDRV:aspect_ratio_muxdrv12_N      34.2857 # aspect ratio of mux driver stage 1  cell N-Type 
-MUXDRV:aspect_ratio_muxdrv12_P      57.1429 # aspect ratio of mux driver stage 1  cell P-Type 
-MUXDRV:aspect_ratio_muxdrvNOR_N      68.5714 # aspect ratio of mux driver stage 2  cell N-Type 
-MUXDRV:aspect_ratio_muxdrvNOR_P      91.4286 # aspect ratio of mux driver stage 2  cell P-Type 
-MUXDRV:aspect_ratio_muxdrvsel_N     228.5714 # aspect ratio of mux driver stage 3  cell N-Type 
-MUXDRV:aspect_ratio_muxdrvsel_P     548.5714 # aspect ratio of mux driver stage 3  cell P-Type 
-OUTDRV:aspect_ratio_outdrvsel_N      13.7143 # aspect ratio of output driver select   cell N-Type 
-OUTDRV:aspect_ratio_outdrvsel_P      22.8571 # aspect ratio of output driver select   cell P-Type 
-OUTDRV:aspect_ratio_outdrvnand_N      27.4286 # aspect ratio of output driver nand   cell N-Type 
-OUTDRV:aspect_ratio_outdrvnand_P      11.4286 # aspect ratio of output driver nand   cell P-Type 
-OUTDRV:aspect_ratio_outdrvnor_N       6.8571 # aspect ratio of output driver nor   cell N-Type 
-OUTDRV:aspect_ratio_outdrvnor_P      45.7143 # aspect ratio of output driver nor   cell P-Type 
-OUTDRV:aspect_ratio_outdriver_N      54.8571 # aspect ratio of output driver  cell N-Type 
-OUTDRV:aspect_ratio_outdriver_P      91.4286 # aspect ratio of output driver  cell P-Type 
# -DUMMY2              <null> # ------------ Aris: end of hotLeakage options - Not a real option

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  Next miss predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** fast forwarding 10000000 insts **
sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn               10000000 # total number of instructions committed
sim_num_refs                4009426 # total number of loads and stores committed
sim_num_loads               2994558 # total number of loads committed
sim_num_stores         1014868.0000 # total number of stores committed
sim_num_branches            1341997 # total number of branches committed
sim_elapsed_time                 70 # total simulation time in seconds
sim_inst_rate           142857.1429 # simulation speed (in insts/sec)
sim_total_insn             14589458 # total number of instructions executed
sim_total_refs              6051195 # total number of loads and stores executed
sim_total_loads             4548396 # total number of loads executed
sim_total_stores       1502799.0000 # total number of stores executed
sim_total_branches          1653817 # total number of branches executed
sim_cycle                   5709617 # total simulation time in cycles
sim_IPC                      1.7514 # instructions per cycle
sim_CPI                      0.5710 # cycles per instruction
sim_exec_BW                  2.5552 # total instructions (mis-spec + committed) per cycle
sim_IPB                      7.4516 # instruction per branch
IFQ_count                  22155513 # cumulative IFQ occupancy
IFQ_fcount                   860361 # cumulative IFQ full count
ifq_occupancy                3.8804 # avg IFQ occupancy (insn's)
ifq_rate                     2.5552 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.5186 # avg IFQ occupant latency (cycle's)
ifq_full                     0.1507 # fraction of time (cycle's) IFQ was full
RUU_count                 209779882 # cumulative RUU occupancy
RUU_fcount                   993365 # cumulative RUU full count
ruu_occupancy               36.7415 # avg RUU occupancy (insn's)
ruu_rate                     2.5552 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 14.3789 # avg RUU occupant latency (cycle's)
ruu_full                     0.1740 # fraction of time (cycle's) RUU was full
LSQ_count                  62713433 # cumulative LSQ occupancy
LSQ_fcount                    17495 # cumulative LSQ full count
lsq_occupancy               10.9838 # avg LSQ occupancy (insn's)
lsq_rate                     2.5552 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  4.2985 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0031 # fraction of time (cycle's) LSQ was full
sim_slip                  250477484 # total number of slip cycles
avg_sim_slip                25.0477 # the average slip between issue and retirement
bpred_comb.lookups          1780759 # total number of bpred lookups
bpred_comb.updates          1341997 # total number of updates
bpred_comb.addr_hits        1092650 # total number of address-predicted hits
bpred_comb.dir_hits         1332996 # total number of direction-predicted hits (includes addr-hits)
bpred_comb.used_bimod        432727 # total number of bimodal predictions used
bpred_comb.used_2lev         442411 # total number of 2-level predictions used
bpred_comb.misses              9001 # total number of misses
bpred_comb.jr_hits           106288 # total number of address-predicted hits for JR's
bpred_comb.jr_seen           346525 # total number of JR's seen
bpred_comb.jr_non_ras_hits.PP        26650 # total number of address-predicted hits for non-RAS JR's
bpred_comb.jr_non_ras_seen.PP       146526 # total number of non-RAS JR's seen
bpred_comb.bpred_addr_rate    0.8142 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_comb.bpred_dir_rate    0.9933 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_comb.bpred_jr_rate    0.3067 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_comb.bpred_jr_non_ras_rate.PP    0.1819 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_comb.retstack_pushes       214940 # total number of address pushed onto ret-addr stack
bpred_comb.retstack_pops       242587 # total number of address popped off of ret-addr stack
bpred_comb.used_ras.PP       199999 # total number of RAS predictions used
bpred_comb.ras_hits.PP        79638 # total number of RAS hits
bpred_comb.ras_rate.PP    0.3982 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses               15323454 # total number of accesses
il1.hits                   15322882 # total number of hits
il1.misses                      572 # total number of misses
il1.read_misses                 572 # total number of read misses
il1.write_misses                  0 # total number of write misses
il1.replacements                236 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0000 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                4072275 # total number of accesses
dl1.hits                    4065699 # total number of hits
dl1.misses                     6576 # total number of misses
dl1.read_misses                6523 # total number of read misses
dl1.write_misses                 53 # total number of write misses
dl1.replacements               5552 # total number of replacements
dl1.writebacks                   75 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0016 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0014 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                   7223 # total number of accesses
ul2.hits                        512 # total number of hits
ul2.misses                     6711 # total number of misses
ul2.read_misses                6711 # total number of read misses
ul2.write_misses                  0 # total number of write misses
ul2.replacements               4454 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.9291 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.6166 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              15323454 # total number of accesses
itlb.hits                  15323418 # total number of hits
itlb.misses                      36 # total number of misses
itlb.read_misses                 36 # total number of read misses
itlb.write_misses                 0 # total number of write misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               4360987 # total number of accesses
dtlb.hits                   4357767 # total number of hits
dtlb.misses                    3220 # total number of misses
dtlb.read_misses               3220 # total number of read misses
dtlb.write_misses                 0 # total number of write misses
dtlb.replacements              3092 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0007 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0007 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 876544 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 131616 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x012001ef40 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                 1160 # total number of pages allocated
mem.page_mem                  9280k # total size of memory pages allocated
mem.ptab_misses               70634 # total first level page table misses
mem.ptab_accesses         179899844 # total page table accesses
mem.ptab_miss_rate           0.0004 # first level page table miss rate
------
bpred_power            14081458.4046 # total power usage of bpred unit
icache_power           18005693.7100 # total power usage of icache
rename_power           1277577.9493 # total power usage of rename unit
window_power           14058626.6536 # total power usage of instruction window
alu_power              44756476.2612 # total power usage of alu
falu_power             27081944.2372 # total power usage of falu
resultbus_power        6607476.7977 # total power usage of resultbus
regfile_power          7446773.2312 # total power usage of arch. regfile
lsq_power              6082472.8832 # total power usage of load/store queue
dcache_power           36011387.4201 # total power usage of dcache
dcache2_power          46789025.3770 # total power usage of dcache2
clock_power            128664482.1891 # total power usage of clock

avg_bpred_power             2.4663 # avg power usage of bpred unit
avg_icache_power             3.1536 # avg power usage of icache
avg_rename_power             0.2238 # avg power usage of rename unit
avg_window_power             2.4623 # avg power usage of instruction window
avg_alu_power                7.8388 # avg power usage of alu
 avg_falu_power              4.7432 # avg power usage of falu
avg_resultbus_power          1.1573 # avg power usage of resultbus
avg_regfile_power            1.3043 # avg power usage of arch. regfile
avg_lsq_power                1.0653 # avg power usage of lsq
avg_dcache_power             6.3071 # avg power usage of dcache
avg_dcache2_power            8.1948 # avg power usage of dcache2
avg_clock_power             22.5347 # avg power usage of clock

fetch_stage_power     32087152.1146 # total power usage of fetch stage
dispatch_stage_power   1277577.9493 # total power usage of dispatch stage
issue_stage_power      154305465.3928 # total power usage of issue stage
avg_fetch_power              5.6198 # average power of fetch unit per cycle
avg_dispatch_power           0.2238 # average power of dispatch unit per cycle
avg_issue_power             27.0255 # average power of issue unit per cycle
total_power            323781450.8771 # total power per cycle
avg_total_power_cycle       56.7081 # average total power per cycle
avg_total_power_cycle_nofp_nod2      43.7701 # average total power per cycle
avg_total_power_insn        22.1928 # average total power per insn
avg_total_power_insn_nofp_nod2      17.1295 # average total power per insn
------
bpred_power_cc1        3166927.7314 # total power usage of bpred unit_cc1
icache_power_cc1       14455688.2617 # total power usage of icache_cc1
rename_power_cc1        970287.0875 # total power usage of rename unit_cc1
window_power_cc1       12219183.5071 # total power usage of instruction window_cc1
alu_power_cc1          14203155.5922 # total power usage of alu_cc1
resultbus_power_cc1    4878632.4072 # total power usage of resultbus_cc1
regfile_power_cc1      5244665.4427 # total power usage of arch. regfile_cc1
lsq_power_cc1          1935648.3477 # total power usage of lsq_cc1
dcache_power_cc1       16740022.9779 # total power usage of dcache_cc1
dcache2_power_cc1        58379.5755 # total power usage of dcache2_cc1
clock_power_cc1        62530078.4380 # total power usage of clock_cc1

avg_bpred_power_cc1         0.5547 # avg power usage of bpred unit_cc1
avg_icache_power_cc1         2.5318 # avg power usage of icache_cc1
avg_rename_power_cc1         0.1699 # avg power usage of rename unit_cc1
avg_window_power_cc1         2.1401 # avg power usage of instruction window_cc1
avg_alu_power_cc1            2.4876 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.8545 # avg power usage of resultbus_cc1
avg_regfile_power_cc1        0.9186 # avg power usage of arch. regfile_cc1
avg_lsq_power_cc1            0.3390 # avg power usage of lsq_cc1
avg_dcache_power_cc1         2.9319 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0102 # avg power usage of dcache2_cc1
avg_clock_power_cc1         10.9517 # avg power usage of clock_cc1

fetch_stage_power_cc1 17622615.9931 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  970287.0875 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  50035022.4075 # total power usage of issue stage_cc1
avg_fetch_power_cc1          3.0865 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.1699 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          8.7633 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  136402669.3689 # total power per cycle_cc1
avg_total_power_cycle_cc1      23.8900 # average total power per cycle_cc1
avg_total_power_insn_cc1       9.3494 # average total power per insn_cc1
------
bpred_power_cc2        1654863.6219 # total power usage of bpred unit_cc2
icache_power_cc2       14455688.2617 # total power usage of icache_cc2
rename_power_cc2        816130.4792 # total power usage of rename unit_cc2
window_power_cc2       10720197.3749 # total power usage of instruction window_cc2
alu_power_cc2          9068139.6093 # total power usage of alu_cc2
resultbus_power_cc2    3441239.4518 # total power usage of resultbus_cc2
regfile_power_cc2      1319580.3728 # total power usage of arch. regfile_cc2
lsq_power_cc2          1342783.1400 # total power usage of lsq_cc2
dcache_power_cc2       12842216.2749 # total power usage of dcache_cc2
dcache2_power_cc2        29595.4291 # total power usage of dcache2_cc2
clock_power_cc2        47143421.7857 # total power usage of clock_cc2

avg_bpred_power_cc2         0.2898 # avg power usage of bpred unit_cc2
avg_icache_power_cc2         2.5318 # avg power usage of icache_cc2
avg_rename_power_cc2         0.1429 # avg power usage of rename unit_cc2
avg_window_power_cc2         1.8776 # avg power usage of instruction window_cc2
avg_alu_power_cc2            1.5882 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.6027 # avg power usage of resultbus_cc2
avg_regfile_power_cc2        0.2311 # avg power usage of arch. regfile_cc2
avg_lsq_power_cc2            0.2352 # avg power usage of instruction lsq_cc2
avg_dcache_power_cc2         2.2492 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0052 # avg power usage of dcache2_cc2
avg_clock_power_cc2          8.2568 # avg power usage of clock_cc2

fetch_stage_power_cc2 16110551.8836 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  816130.4792 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  37444171.2800 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.8217 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1429 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          6.5581 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  102833855.8012 # total power per cycle_cc2
avg_total_power_cycle_cc2      18.0106 # average total power per cycle_cc2
avg_total_power_insn_cc2       7.0485 # average total power per insn_cc2
------
bpred_power_cc3        2746318.1689 # total power usage of bpred unit_cc3
icache_power_cc3       14810688.8062 # total power usage of icache_cc3
rename_power_cc3        846859.5654 # total power usage of rename unit_cc3
window_power_cc3       10932607.6672 # total power usage of instruction window_cc3
alu_power_cc3          12123471.6760 # total power usage of alu_cc3
resultbus_power_cc3    3580948.2399 # total power usage of resultbus_cc3
regfile_power_cc3      1471979.3540 # total power usage of arch. regfile_cc3
lsq_power_cc3          1753899.4771 # total power usage of lsq_cc3
dcache_power_cc3       14851417.5182 # total power usage of dcache_cc3
dcache2_power_cc3      4702660.8289 # total power usage of dcache2_cc3
clock_power_cc3        53761552.1775 # total power usage of clock_cc3

avg_bpred_power_cc3         0.4810 # avg power usage of bpred unit_cc3
avg_icache_power_cc3         2.5940 # avg power usage of icache_cc3
avg_rename_power_cc3         0.1483 # avg power usage of rename unit_cc3
avg_window_power_cc3         1.9148 # avg power usage of instruction window_cc3
avg_alu_power_cc3            2.1233 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.6272 # avg power usage of resultbus_cc3
avg_regfile_power_cc3        0.2578 # avg power usage of arch. regfile_cc3
avg_lsq_power_cc3            0.3072 # avg power usage of instruction lsq_cc3
avg_dcache_power_cc3         2.6011 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.8236 # avg power usage of dcache2_cc3
avg_clock_power_cc3          9.4160 # avg power usage of clock_cc3

fetch_stage_power_cc3 17557006.9752 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  846859.5654 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  47945005.4073 # total power usage of issue stage_cc3
avg_fetch_power_cc3          3.0750 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1483 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          8.3972 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  121582403.4793 # total power per cycle_cc3
avg_total_power_cycle_cc3      21.2943 # average total power per cycle_cc3
avg_total_power_insn_cc3       8.3336 # average total power per insn_cc3
------
total_bpred_access          1341997 # total number accesses of bpred unit
total_icache_access        15351298 # total number accesses of icache
total_rename_access        14589458 # total number accesses of rename unit
total_window_access        46457668 # total number accesses of instruction window
total_alu_access           11346473 # total number accesses of alu
total_resultbus_access     13260676 # total number accesses of resultbus
total_regfile_access       13773306 # total number accesses of arch. regfile
total_lsq_access            4814196 # total number accesses of load/store queue
total_dcache_access         4072275 # total number accesses of dcache
total_dcache2_access           7223 # total number accesses of dcache2

avg_bpred_access            0.2350 # avg number accesses of bpred unit
avg_icache_access            2.6887 # avg number accesses of icache
avg_rename_access            2.5552 # avg number accesses of rename unit
avg_window_access            8.1367 # avg number accesses of instruction window
avg_alu_access               1.9873 # avg number accesses of alu
avg_resultbus_access         2.3225 # avg number accesses of resultbus
avg_regfile_access           2.4123 # avg number accesses of arch. regfile
avg_lsq_access               0.8432 # avg number accesses of lsq
avg_dcache_access            0.7132 # avg number accesses of dcache
avg_dcache2_access           0.0013 # avg number accesses of dcache2

max_bpred_access                 3 # max number accesses of bpred unit
max_icache_access                 4 # max number accesses of icache
max_rename_access                 4 # max number accesses of rename unit
max_window_access                18 # max number accesses of instruction window
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_regfile_access               12 # max number accesses of arch. regfile
max_lsq_access                    6 # max number accesses of load/store queue
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                3 # max number accesses of dcache2

max_cycle_power_cc1        38.7543 # maximum cycle power usage of cc1
max_cycle_power_cc2         32.7071 # maximum cycle power usage of cc2
max_cycle_power_cc3         34.4377 # maximum cycle power usage of cc3
   --------------

dl1.leak_ctrl.mode_switch_l2h            0 # total no. of switches from low to high mode
dl1.leak_ctrl.mode_switch_h2l            0 # total no. of switches from high to low mode
dl1.leak_ctrl.baseline_leak 2297725.3169 # total baseline leakage
dl1.leak_ctrl.orig_leakage_savings 2297725.3169 # total leakage power saved
dl1.leak_ctrl.xtra_leak       0.0000 # total leakage due to 'xtra'
dl1.leak_ctrl.xtra_dynamic_power       0.0000 # total dynamic power due to 'xtra'
dl1.leak_ctrl.mode_switch_power_l2h       0.0000 # total dynamic power due to low to high mode switches
dl1.leak_ctrl.mode_switch_power_h2l       0.0000 # total dynamic power due to high to low mode switches
dl1.leak_ctrl.bitlineleak  759154.0352 # total bitline leakage
dl1.leak_ctrl.total_net_savings 2297725.3169 # total net savings
dl1.leak_ctrl.low_leak_ratio       0.0000 # total turnoff ratio
dl1.leak_ctrl.avg_mode_switch_l2h       0.0000 # avg no. of switches from low to high mode
dl1.leak_ctrl.avg_mode_switch_h2l       0.0000 # avg no. of switches from high to low mode
dl1.leak_ctrl.avg_leakage_savings       0.4024 # avg leakage power saved
dl1.leak_ctrl.avg_baseline_leak       0.4024 # avg baseline leakage
dl1.leak_ctrl.avg_xtra_leak       0.0000 # avg leakage due to 'xtra'
dl1.leak_ctrl.avg_xtra_dynamic_power       0.0000 # avg dynamic power due to 'xtra'
dl1.leak_ctrl.avg_mode_switch_power_l2h       0.0000 # avg dynamic power due to low to high mode switches
dl1.leak_ctrl.avg_mode_switch_power_h2l       0.0000 # avg dynamic power due to high to low mode switches
dl1.leak_ctrl.avg_net_savings       0.4024 # avg net savings
dl1.leak_ctrl.avg_low_leak_ratio       0.0000 # avg turnoff ratio
dl1.leak_ctrl.norm_net_savings       1.0000 # normalized net savings
dl1.leak_ctrl.total_subleak_savings 1309228.8894 # total sub leakage savings
dl1.leak_ctrl.norm_subleak_savings       0.5698 # normalized subleakage savings
dl1.leak_ctrl.total_gleak_savings  988496.4271 # total sub leakage savings
dl1.leak_ctrl.norm_gleak_savings       0.4302 # normalized gateleakage savings
dl1.leak_ctrl.subleak  1309228.8894 # total sub leakage for tag and array
dl1.leak_ctrl.gateleak  988496.4271 # total gate leakage for tag and array

